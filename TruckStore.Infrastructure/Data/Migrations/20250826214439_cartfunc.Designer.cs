// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TruckStore.Infrastructure.Data;

#nullable disable

namespace TruckStore.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TruckStoreContext))]
    [Migration("20250826214439_cartfunc")]
    partial class cartfunc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TruckStore.Domain.Brands.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2684a8e2-7010-49b1-a5ac-9011a4ac451c"),
                            Name = "Volvo"
                        },
                        new
                        {
                            Id = new Guid("534b4378-9d34-444e-9d77-2fede04f3b80"),
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = new Guid("b9916297-1c95-40f4-8176-5ea7b6f4b3c6"),
                            Name = "Iveco"
                        },
                        new
                        {
                            Id = new Guid("b5c96930-725a-489e-8cbd-aad6974823a4"),
                            Name = "Scania"
                        },
                        new
                        {
                            Id = new Guid("bdfa547d-7b74-43df-a49d-611ca7f87146"),
                            Name = "Renault"
                        });
                });

            modelBuilder.Entity("TruckStore.Domain.Cart.CartItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TruckId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ItemId");

                    b.HasIndex("TruckId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("TruckStore.Domain.Trucks.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<int>("maxLiftingCapacity")
                        .HasColumnType("int");

                    b.Property<int>("maxSpeed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Trucks");
                });

            modelBuilder.Entity("TruckStore.Domain.Cart.CartItem", b =>
                {
                    b.HasOne("TruckStore.Domain.Trucks.Truck", "Truck")
                        .WithMany()
                        .HasForeignKey("TruckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Truck");
                });

            modelBuilder.Entity("TruckStore.Domain.Trucks.Truck", b =>
                {
                    b.HasOne("TruckStore.Domain.Brands.Brand", "BrandName")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BrandName");
                });
#pragma warning restore 612, 618
        }
    }
}
